Tazi e za koi cifri sa sysedni primerno 1 i 2, 3 i 4, 1 i 0
#include <stdio.h>

void findAdjacentDigits(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        if (arr[i] + 1 == arr[i+1] || arr[i] - 1 == arr[i+1]) {
            printf("%d и %d са съседни.\n", arr[i], arr[i+1]);
        }
    }
}

int main() {
    int digits[] = {3, 4, 1, 2, 5, 6};
    int size = sizeof(digits) / sizeof(digits[0]);

    findAdjacentDigits(digits, size);

    return 0;
}
Palindroma-------------------------------------------------------------
#include <stdio.h>

int isPalindrome(int number) {
    int reversedNumber = 0;
    int originalNumber = number;

    while (number > 0) {
        int digit = number % 10;
        reversedNumber = reversedNumber * 10 + digit;
        number /= 10;
    }

    if (originalNumber == reversedNumber) {
        return 1; // числото е палиндром
    } else {
        return 0; // числото не е палиндром
    }
}

int main() {
    int number = 12321; // Примерно число

    if (isPalindrome(number)) {
        printf("%d е палиндром.\n", number);
    } else {
        printf("%d не е палиндром.\n", number);
    }

    return 0;
}
Stotinkite----------------------------------------------------------------
#include <stdio.h>

void printCoinCombination(int amount) {
    printf("Combination of coins for %d cents:\n", amount);

    int count50 = amount / 50;
    if (count50 > 0) {
        printf("%d x 50st.\n", count50);
        amount = amount % 50;
    }

    int count20 = amount / 20;
    if (count20 > 0) {
        printf("%d x 20st.\n", count20);
        amount = amount % 20;
    }

    int count10 = amount / 10;
    if (count10 > 0) {
        printf("%d x 10st.\n", count10);
        amount = amount % 10;
    }

    int count5 = amount / 5;
    if (count5 > 0) {
        printf("%d x 5st.\n", count5);
        amount = amount % 5;
    }

    int count2 = amount / 2;
    if (count2 > 0) {
        printf("%d x 2st.\n", count2);
        amount = amount % 2;
    }

    int count1 = amount / 1;
    if (count1 > 0) {
        printf("%d x 1st.\n", count1);
    }
}

int main() {
    int amount = 87; // Примерна сума

    printCoinCombination(amount);

    return 0;
}
magic------------------------------------------------------------------------------
#include <stdio.h>

void findMagicSum(int magicNumber) {
    int found = 0;
    int i = 1;

    while (i <= magicNumber / 2) {
        int j = magicNumber - i;

        printf("Намерена комбинация: %d + %d = %d\n", i, j, magicNumber);
        found = 1;
        break;
    }

    if (!found) {
        printf("Не е намерена комбинация, чийто сбор да е равен на %d\n", magicNumber);
    }
}

int main() {
    int magicNumber = 12; // Магическото число

    findMagicSum(magicNumber);

    return 0;
}